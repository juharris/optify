{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "https://raw.githubusercontent.com/juharris/optify/refs/heads/main/schemas/feature_file.json",
	"title": "Optify Feature Configuration",
	"description": "Schema for Optify feature configuration files supporting JSON and YAML formats.",
	"type": "object",
	"properties": {
		"metadata": {
			"type": "object",
			"description": "Information about the feature configuration",
			"properties": {
				"aliases": {
					"type": "array",
					"description": "Alternative names for the group of options. Helpful for using custom short names.",
					"items": {
						"type": "string",
						"minLength": 1
					},
					"uniqueItems": true
				},
				"details": {
					"description": "Other metadata that may be custom and application specific. Good place for documentation that should be available to the application.",
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "object"
						},
						{
							"type": "array"
						},
						{
							"type": "number"
						},
						{
							"type": "boolean"
						},
						{
							"type": "null"
						}
					]
				},
				"name": {
					"type": "string",
					"description": "The name of the group of options. Usually derived from the file name including subdirectories.",
					"minLength": 1
				},
				"owners": {
					"type": "string",
					"description": "The creators or maintainers of this group of options. For example, emails separated by semicolons.",
					"minLength": 1
				}
			},
			"additionalProperties": false
		},
		"imports": {
			"type": "array",
			"description": "List of canonical feature names to import or inherit from. Do not use the file extension because the builder does not allow two files with the same relative path but different extensions in order to keep canonical feature names clear.",
			"items": {
				"type": "string",
				"minLength": 1,
				"pattern": "^(?!.*\\.(json|yaml|yml)$).*$",
				"errorMessage": "Import paths should not include file extensions because the builder does not allow two files with the same relative path but different extensions in order to keep canonical feature names clear."
			},
			"default": [
				"<path/to/file without extension>"
			],
			"minItems": 1,
			"uniqueItems": true
		},
		"options": {
			"description": "The actual configuration options. Can contain arbitrary nested structures of objects, arrays, strings, numbers, and booleans.",
			"oneOf": [
				{
					"type": "object"
				},
				{
					"type": "array"
				},
				{
					"type": "string"
				},
				{
					"type": "number"
				},
				{
					"type": "boolean"
				},
				{
					"type": "null"
				}
			]
		}
	},
	"anyOf": [
		{
			"required": [
				"imports"
			]
		},
		{
			"required": [
				"metadata"
			]
		},
		{
			"required": [
				"options"
			]
		}
	]
}