name: "[VS Code Ext] Build & Test"

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/vsc_extension-build_test.yml"
      - "vscode/extension/**"
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened, ready_for_review ]
    paths:
      - ".github/workflows/vsc_extension-build_test.yml"
      - "vscode/extension/**"

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  setup:
    # Drafts: Only run on Ubuntu.
    # Non-drafts: Run on both Ubuntu and macOS.
    name: "Setup Build Matrix"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup.outputs.matrix }}
    steps:
      - id: setup
        run: |
          matrix='[{"os": "ubuntu-latest", "targets": "alpine-arm64 alpine-x64 linux-arm64 linux-armhf linux-x64", "test_command": "xvfb-run -a npm test"}'
          
          if [[ "${{ github.event.pull_request.draft }}" != "true" ]]; then
            matrix+=', {"os": "macos-latest", "targets": "darwin-arm64 darwin-x64", "test_command": "npm test"}'
          fi
          
          matrix+=']'
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  test:
    name: "Build & Test"
    needs: setup
    runs-on: ${{ matrix.settings.os }}
    strategy:
      fail-fast: true
      matrix:
        settings: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        cache: npm
        cache-dependency-path: ./vscode/extension/package-lock.json
        node-version: 22
    - name: "Install dependencies"
      run: npm ci
      working-directory: ./vscode/extension
    - name: "Lint"
      run: npm run lint
      working-directory: ./vscode/extension
    - name: "Compile"
      if: github.ref == 'refs/heads/main'
      run: npm run compile
      working-directory: ./vscode/extension
    - name: "Package"
      if: github.ref != 'refs/heads/main'
      shell: bash
      run: npm run package
      working-directory: ./vscode/extension
    - name: "Test"
      run: ${{ matrix.settings.test_command }}
      working-directory: ./vscode/extension
    - name: "[VS] Publish"
      if: github.ref == 'refs/heads/main'
      shell: bash
      run: |
        npm run publish -- --pre-release --target ${{ matrix.settings.targets }} --skip-duplicate
      working-directory: ./vscode/extension
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
    - name: "[Open VSX] Publish"
      # Temp publish pre-release to try it first.
      # if: github.ref == 'refs/heads/main'
      shell: bash
      run: |
        npx ovsx publish --pre-release --target ${{ matrix.settings.targets }} --skip-duplicate --pat ${{ secrets.OPEN_VSX_TOKEN }}
      working-directory: ./vscode/extension
    