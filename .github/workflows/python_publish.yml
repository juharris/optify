# This file was initially autogenerated by maturin v1.8.2
# It was modified.
# To regenerate it, run `maturin generate-ci github`.

name: "[Python] Build & Publish"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'py*'
    paths:
      - ".github/workflows/python_publish.yml"
      - "python/**"
      - "rust/**"
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened, ready_for_review ]
    paths:
      - ".github/workflows/python_publish.yml"
      - "python/**"
      - "rust/**"

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: "[Rust] Setup cache"
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            python/optify
            rust/optify
          cache-on-failure: true
          shared-key: ${{ matrix.platform.runner }}-rust
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
          working-directory: python/optify
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: python/optify/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: "[Rust] Setup cache"
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            python/optify
            rust/optify
          cache-on-failure: true
          shared-key: ${{ matrix.platform.runner }}-rust
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          working-directory: python/optify
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: python/optify/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: "[Rust] Setup cache"
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            python/optify
            rust/optify
          cache-on-failure: true
          shared-key: ${{ matrix.platform.runner }}-rust
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          working-directory: python/optify
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: python/optify/dist
  sdist:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: "[Rust] Setup cache"
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            python/optify
            rust/optify
          cache-on-failure: true
          shared-key: sdist-rust
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: python/optify
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: python/optify/dist

  release:
    if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main') && (github.event.pull_request.draft == false || github.event_name != 'pull_request') }}
    name: "Publish Release"
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      - name: "Publish to PyPI"
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
