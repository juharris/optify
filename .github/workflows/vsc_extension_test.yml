name: "[VS Code Ext] Build & Test"

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/vsc_extension_test.yml"
      - "vscode/extension/**"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/vsc_extension_test.yml"
      - "vscode/extension/**"

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  test:
    name: "Build & Test"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        cache: npm
        cache-dependency-path: ./vscode/extension/package-lock.json
        node-version: 22
    - name: "Install dependencies"
      run: npm ci
      working-directory: ./vscode/extension
    - name: "Lint"
      run: npm run lint
      working-directory: ./vscode/extension
    - name: "Test"
      run: xvfb-run -a npm test
      if: runner.os == 'Linux'
      working-directory: ./vscode/extension
    - name: "Test"
      run: npm test
      if: runner.os != 'Linux'
      working-directory: ./vscode/extension

    # Ruby
    # setup-ruby also runs `bundle install`.
    # It uses the Ruby version from .ruby-version.
    - uses: ruby/setup-ruby@v1
      name: "[Ruby] Setup"
      with:
        bundler-cache: true
        working-directory: ./ruby/optify
    - name: "[Ruby] Lint"
      shell: bash
      run: |
        set -ex
        bundle exec srb tc
        bundle exec rubocop

        # Ensure that the RBS file is up-to-date.
        mkdir -p tmp
        bundle exec rbs prototype rbi rbi/optify.rbi > tmp/optify.rbs~
        diff -u sig/optify.rbs tmp/optify.rbs~
      working-directory: ./ruby/optify
    - name: "[Ruby][Rust] Lint"
      run : cargo fmt -- --check
      working-directory: ./ruby/optify
    - name: "[Ruby][Rust] Clippy"
      run: cargo clippy --release --no-deps -- -D warnings --no-deps
      working-directory: ./ruby/optify
    - name: "[Ruby] Test"
      run: bundle exec rake test
      working-directory: ./ruby/optify

    # Python
    - uses: actions/setup-python@v5
      name: "[Python] Setup"
      with:
        cache: pip
        python-version: 3.x
    - name: "[Python] Build"
      shell: bash
      run: pip install -e .[dev]
      working-directory: ./python/optify
    - name: "[Python][Rust] Lint"
      run : cargo fmt -- --check
      working-directory: ./python/optify
    - name: "[Python][Rust] Clippy"
      run: cargo clippy --release --no-deps -- -D warnings --no-deps
      working-directory: ./python/optify
    - name: "[Python] Test"
      shell: bash
      run: pytest
      working-directory: ./python/optify


