name: "Build"

on:
  push:
    branches: [ "main" ]
    paths:
      - "rust/**"
      - "tests/**"
  pull_request:
    branches: [ "main" ]
    paths:
      - "rust/**"
      - "tests/**"


  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: "[Rust] Cache Cargo registry"
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('./rust/optify/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: "[Rust] Cache Cargo index"
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('./rust/optify/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: "[Rust] [optify] Cache Cargo build"
      uses: actions/cache@v3
      with:
        path: ./rust/optify/target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('./rust/optify/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: "[Rust] [optify] Build"
      run: cargo build --release
      working-directory: ./rust/optify
    - name: "[Rust] [optify] Lint"
      run : cargo fmt -- --check
      working-directory: ./rust/optify
    - name: "[Rust] [optify] Clippy"
      run: cargo clippy --release -p optify --no-deps -- -D warnings --no-deps
      working-directory: ./rust/optify
    - name: "[Rust] [optify] Test"
      run: cargo test --release
      working-directory: ./rust/optify
